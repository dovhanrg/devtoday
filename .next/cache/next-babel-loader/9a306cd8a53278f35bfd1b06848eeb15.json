{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Coding/tasks/DevelopsToday/blog/blog/pages/new/index.tsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/react-in-jsx-scope */\n\n/* eslint-disable require-jsdoc */\nimport axios from 'axios';\nimport Layout from '../../components/MyLayout';\nimport styled from 'styled-components';\nimport React from 'react';\nconst Button = styled.button`\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border-radius: 3px;\n    border: 2px solid palevioletred;\n    color: palevioletred;\n    cursor: pointer;\n`;\n\nfunction sendPost(post) {\n  axios.post('https://simple-blog-api.crew.red/posts/', {\n    title: post.title,\n    body: post.body\n  });\n}\n\nconst newPost = () => {\n  const refBody = React.createRef();\n  const refTitle = React.createRef();\n  let body;\n  let title;\n  let isVisible;\n\n  function alertMessage() {\n    const timer = setTimeout(() => {\n      isVisible = false;\n    }, 1000);\n  }\n\n  function handleBodyChange(e) {\n    body = e.target.value;\n  }\n\n  function handleTitleChange(e) {\n    title = e.target.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const post = {\n      title,\n      body\n    };\n    sendPost(post);\n    if (refBody.current) refBody.current.value = '';\n    if (refTitle.current) refTitle.current.value = '';\n    isVisible = true;\n    alertMessage();\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Create new post\"), __jsx(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: e => {\n      handleSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Post Title\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    ref: refTitle,\n    type: \"text\",\n    name: \"title\",\n    onChange: e => {\n      handleTitleChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Post body\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    ref: refBody,\n    name: \"body\",\n    onChange: e => {\n      handleBodyChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"submit\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Your post was succsessfully posted!\"));\n};\n\nexport default newPost;","map":{"version":3,"sources":["/mnt/c/Coding/tasks/DevelopsToday/blog/blog/pages/new/index.tsx"],"names":["axios","Layout","styled","React","Button","button","sendPost","post","title","body","newPost","refBody","createRef","refTitle","isVisible","alertMessage","timer","setTimeout","handleBodyChange","e","target","value","handleTitleChange","handleSubmit","preventDefault","current"],"mappings":"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","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable require-jsdoc */\r\nimport axios from 'axios';\r\nimport Layout from '../../components/MyLayout';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst Button = styled.button`\r\n    font-size: 1em;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    border-radius: 3px;\r\n    border: 2px solid palevioletred;\r\n    color: palevioletred;\r\n    cursor: pointer;\r\n`;\r\n\r\ninterface SendPost {\r\n    title: object | string | undefined;\r\n    body: object | string | undefined;\r\n}\r\n\r\nfunction sendPost(post: SendPost): void {\r\n    axios.post('https://simple-blog-api.crew.red/posts/', {\r\n        title: post.title,\r\n        body: post.body,\r\n    });\r\n}\r\n\r\nconst newPost = (): object => {\r\n    const refBody = React.createRef<HTMLTextAreaElement>();\r\n    const refTitle = React.createRef<HTMLInputElement>();\r\n    let body: string;\r\n    let title: string;\r\n    let isVisible: boolean;\r\n\r\n    function alertMessage(): void {\r\n        const timer = setTimeout(() => {\r\n            isVisible = false;\r\n        }, 1000);\r\n    }\r\n    function handleBodyChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\r\n        body = e.target.value;\r\n    }\r\n    function handleTitleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n        title = e.target.value;\r\n    }\r\n    function handleSubmit(e: React.FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        const post = {\r\n            title,\r\n            body,\r\n        };\r\n        sendPost(post);\r\n        if (refBody.current) refBody.current.value = '';\r\n        if (refTitle.current) refTitle.current.value = '';\r\n        isVisible = true;\r\n        alertMessage();\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <h1>Create new post</h1>\r\n            <form\r\n                action=\"\"\r\n                method=\"post\"\r\n                onSubmit={(e): void => {\r\n                    handleSubmit(e);\r\n                }}\r\n            >\r\n                <label htmlFor=\"title\">\r\n                    Post Title\r\n                    <br />\r\n                    <input\r\n                        ref={refTitle}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        onChange={(e): void => {\r\n                            handleTitleChange(e);\r\n                        }}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label htmlFor=\"body\">\r\n                    Post body\r\n                    <br />\r\n                    <textarea\r\n                        ref={refBody}\r\n                        name=\"body\"\r\n                        onChange={(e): void => {\r\n                            handleBodyChange(e);\r\n                        }}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <Button type=\"submit\">submit</Button>\r\n            </form>\r\n            <div>Your post was succsessfully posted!</div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default newPost;\r\n"]},"metadata":{},"sourceType":"module"}