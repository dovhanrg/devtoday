{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/c/Coding/tasks/DevelopsToday/blog/blog/pages/posts/new/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 1em;\\n    margin: 1em;\\n    padding: 0.25em 1em;\\n    border-radius: 3px;\\n    border: 2px solid palevioletred;\\n    color: palevioletred;\\n    cursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/react-in-jsx-scope */\n\n/* eslint-disable require-jsdoc */\nimport axios from 'axios';\nimport Layout from '../../../components/MyLayout';\nimport styled from 'styled-components';\nimport React from 'react';\nvar Button = styled.button(_templateObject());\n\nfunction sendPost(post) {\n  axios.post('https://simple-blog-api.crew.red/posts/', {\n    title: post.title,\n    body: post.body\n  });\n}\n\nvar newPost = function newPost() {\n  var refBody = React.createRef();\n  var refTitle = React.createRef();\n  var body;\n  var title;\n\n  function handleBodyChange(e) {\n    body = e.target.value;\n  }\n\n  function handleTitleChange(e) {\n    title = e.target.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var post = {\n      title: title,\n      body: body\n    };\n    sendPost(post);\n    if (refBody.current) refBody.current.value = '';\n    if (refTitle.current) refTitle.current.value = '';\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Create new post\"), __jsx(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: function onSubmit(e) {\n      handleSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Post Title\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    ref: refTitle,\n    type: \"text\",\n    name: \"title\",\n    onChange: function onChange(e) {\n      handleTitleChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Post body\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    ref: refBody,\n    name: \"body\",\n    onChange: function onChange(e) {\n      handleBodyChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default newPost;","map":{"version":3,"sources":["/mnt/c/Coding/tasks/DevelopsToday/blog/blog/pages/posts/new/index.tsx"],"names":["axios","Layout","styled","React","Button","button","sendPost","post","title","body","newPost","refBody","createRef","refTitle","handleBodyChange","e","target","value","handleTitleChange","handleSubmit","preventDefault","current"],"mappings":"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","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable require-jsdoc */\r\nimport axios from 'axios';\r\nimport Layout from '../../../components/MyLayout';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst Button = styled.button`\r\n    font-size: 1em;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    border-radius: 3px;\r\n    border: 2px solid palevioletred;\r\n    color: palevioletred;\r\n    cursor: pointer;\r\n`;\r\n\r\ninterface SendPost {\r\n    title: object | string | undefined;\r\n    body: object | string | undefined;\r\n}\r\n\r\nfunction sendPost(post: SendPost): void {\r\n    axios.post('https://simple-blog-api.crew.red/posts/', {\r\n        title: post.title,\r\n        body: post.body,\r\n    });\r\n}\r\n\r\nconst newPost = (): object => {\r\n    const refBody = React.createRef<HTMLTextAreaElement>();\r\n    const refTitle = React.createRef<HTMLInputElement>();\r\n    let body: string;\r\n    let title: string;\r\n\r\n    function handleBodyChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\r\n        body = e.target.value;\r\n    }\r\n    function handleTitleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n        title = e.target.value;\r\n    }\r\n    function handleSubmit(e: React.FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        const post = {\r\n            title,\r\n            body,\r\n        };\r\n        sendPost(post);\r\n        if (refBody.current) refBody.current.value = '';\r\n        if (refTitle.current) refTitle.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <h1>Create new post</h1>\r\n            <form\r\n                action=\"\"\r\n                method=\"post\"\r\n                onSubmit={(e): void => {\r\n                    handleSubmit(e);\r\n                }}\r\n            >\r\n                <label htmlFor=\"title\">\r\n                    Post Title\r\n                    <br />\r\n                    <input\r\n                        ref={refTitle}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        onChange={(e): void => {\r\n                            handleTitleChange(e);\r\n                        }}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label htmlFor=\"body\">\r\n                    Post body\r\n                    <br />\r\n                    <textarea\r\n                        ref={refBody}\r\n                        name=\"body\"\r\n                        onChange={(e): void => {\r\n                            handleBodyChange(e);\r\n                        }}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <Button type=\"submit\">submit</Button>\r\n            </form>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default newPost;\r\n"]},"metadata":{},"sourceType":"module"}